{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","id","year","title","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","key","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mVAeeA,MAZf,SAAeC,GAEX,OADAC,QAAQC,IAAIF,GAEZ,yBAAKG,UAAU,oBACX,6DAGA,4E,gFCmCOC,MAxCf,YAA4D,IAA5CC,EAA2C,EAA3CA,GAAIC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC9C,OACQ,yBAAKP,UAAU,SACV,kBAAC,IAAD,CAAMQ,GAAI,CACPC,SAAS,UAAD,OAAYP,GACpBQ,MAAO,CACHP,OACAC,QACAC,UACAC,SACAC,YAGR,yBAAKI,IAAKL,EAAQM,IAAKR,EAAOA,MAAOA,IACrC,yBAAKJ,UAAU,eACX,wBAAIA,UAAU,gBAAgBI,GAC9B,wBAAIJ,UAAU,eAAeG,GAC7B,wBAAIH,UAAU,gBACTO,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACR,wBAAIC,IAAKD,EAAOf,UAAU,sBAAsBc,OAGxD,uBAAGd,UAAU,kBAAkBK,EAAQY,MAAM,EAAG,KAAhD,YCiCLC,G,kNAtDbR,MAAQ,CACNS,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAOAC,IAAMC,IAAI,6CAPV,gBAIJJ,EAJI,EAERK,KACEA,KACEL,OAIN,EAAKM,SAAS,CACZN,OAAQA,EACRD,WAAW,IAVH,2C,kEAgBVQ,KAAKN,c,+BAEG,IAAD,EACsBM,KAAKjB,MAA1BS,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,yBAAKlB,GAAG,UACN,6BAASF,UAAU,aAChBmB,EACC,yBAAKnB,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZoB,EAAOP,KAAI,SAAAe,GAAK,OACjB,kBAAC,EAAD,CACEZ,IAAKY,EAAM1B,GACXA,GAAI0B,EAAM1B,GACVC,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAMC,mBACdtB,OAAUqB,EAAMrB,mB,GA1CbuB,IAAMC,YCoBVC,G,wLApBU,IAAD,EACcL,KAAK9B,MAA3BoC,EADQ,EACRA,SAAUC,EADF,EACEA,aACIC,IAAnBF,EAASvB,OACRwB,EAAQE,KAAK,O,+BAGX,IACEH,EAAaN,KAAK9B,MAAlBoC,SACR,OAAGA,EAASvB,MACD,yBAAKV,UAAU,iBAClB,uDAA6BiC,EAASvB,MAAMN,MAA5C,MAGG,S,GAdE0B,IAAMC,Y,MCaZM,MAbf,WACI,OACI,6BACI,yBAAKrC,UAAU,aACX,kBAAC,IAAD,CAAMQ,GAAG,IAAIR,UAAU,QAAvB,SAEJ,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMQ,GAAG,SAASR,UAAU,QAA5B,Y,MCWDsC,MAdf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKtC,UAAU,OACb,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOuC,KAAK,IAAIC,OAAQ,EAAOC,UAAYvB,IAC3C,kBAAC,IAAD,CAAOqB,KAAK,SAASE,UAAY7C,IACjC,kBAAC,IAAD,CAAO2C,KAAK,aAAaE,UAAYT,MCZ3CU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.dfd893f2.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./About.css\";\n\nfunction About(props) {\n    console.log(props);\n    return (\n    <div className=\"about__container\">\n        <span>\n            this is an about this page.\n        </span>\n        <span> Also this is an Movie App using react. </span>\n    </div>\n    )\n}\n\nexport default About;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport propTypes from \"prop-types\";\nimport \"./movie.css\"\n\nfunction Movie({id, year, title, summary, poster, genres}) {\n    return (\n            <div className=\"movie\">\n                 <Link to={{\n                    pathname: `/movie/${id}`,\n                    state: {\n                        year,\n                        title,\n                        summary,\n                        poster,\n                        genres,\n                    }\n                }}>\n                <img src={poster} alt={title} title={title}></img>\n                <div className=\"movie__data\">\n                    <h3 className=\"movie__title\">{title}</h3>\n                    <h5 className=\"movie__year\">{year}</h5>\n                    <ul className=\"movie__genre\">\n                        {genres.map((genre, index) => (\n                            <li key={index} className=\"movie__genre genre\">{genre}</li>\n                        ))}\n                    </ul>\n                    <p className=\"movie__summary\">{summary.slice(0, 120)}....</p>\n                </div>\n                </Link>\n            </div>\n    )\n}\n\n\nMovie.propTypes = {\n    id: propTypes.number.isRequired,\n    year: propTypes.number.isRequired,\n    title: propTypes.string.isRequired,\n    summary: propTypes.string.isRequired,\n    poster: propTypes.string.isRequired,\n    genres: propTypes.arrayOf(propTypes.string).isRequired,\n}\n\n\nexport default Movie;","import React from 'react';\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport \"./Home.css\"\n\nclass Home extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  }\n  getMovies = async () => {\n    const {\n      data: {\n        data: {\n          movies\n        }\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\"); //API로부터 데이터를 fetching.\n    this.setState({\n      movies: movies,\n      isLoading: false\n    });\n     //state에 저장하고, 로딩상태 변경.\n    // movies: movies => movie로 변경가능 (자바스크립트 ES6 추가 기능)\n  }\n  componentDidMount() {\n    this.getMovies();\n  }\n  render() {\n    const { isLoading, movies} = this.state; //isLoading = true <-> ES6 문법.\n    return ( \n      <div id=\"potato\">\n        <section className=\"container\">\n          {isLoading ? (\n            <div className=\"loader\">\n              <span className=\"loader__text\">Loading...</span>\n            </div>\n          ) : (\n            <div className=\"movies\">\n              {movies.map(movie => ( \n              <Movie \n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres = {movie.genres}\n              />\n              ))}\n            </div>\n          )\n          } \n        </section>\n      </div>\n    )\n  }\n}\n\n\nexport default Home;","import React from \"react\";\nimport \"./Detail.css\";\n\n//class 컴포넌트로 만드는이유는, 컴포넌트의 state가 없는 상황을 대비하기 때문, state가 undefined가 되면 redirect 할 수 있도록.\nclass Detail extends React.Component {\n    componentDidMount() {\n        const { location, history } = this.props\n        if(location.state === undefined) {\n            history.push('/');\n        }\n    }\n    render() {\n        const { location } = this.props;\n        if(location.state) {\n            return <div className=\"Detail__title\">\n                <span> Movie's title is a \"{ location.state.title}\"</span>\n            </div>\n        }else {\n            return null;\n        }\n        \n    }\n}\n\n\nexport default Detail;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\"\n\nfunction Navigation() {\n    return (\n        <div>\n            <div className=\"Nav__link\">\n                <Link to=\"/\" className=\"Link\">Home</Link>\n            </div>\n            <div className=\"Nav__link\">\n                <Link to=\"/about\" className=\"Link\">About</Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Navigation;","import React from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div className=\"Nav\">\n        <Navigation />\n      </div>\n      <Route path=\"/\" exact={ true } component={ Home }/>\n      <Route path=\"/about\" component={ About }/>\n      <Route path=\"/movie/:id\" component={ Detail }/>\n    </HashRouter>\n  )\n  \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// app.js에 있는 app 함수에서 만든 요소가 root 요소 안으로 들어감\n// react Application은 한번에 한 Component만 랜더링할 수 있다."],"sourceRoot":""}